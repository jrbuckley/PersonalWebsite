---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const blogPosts = await getCollection('blog');
  return blogPosts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// Get the post from the props
const { post } = Astro.props;

// Check if post exists
if (!post) {
  return Astro.redirect('/404');
}

// Get the post data
const { title, description, publishDate, author, tags, image } = post.data;

// Render the post content
const { Content } = await post.render();
---

<Layout title={`${title} - Jorge Buckley`}>
  <article class="max-w-4xl mx-auto px-4 py-8">
    <header class="mb-8">
      <h1 class="text-4xl font-bold text-[color:var(--color-luxe-text)] mb-4">
        {title}
      </h1>
      <div class="flex items-center gap-4 text-[color:var(--color-luxe-subtext)]">
        <time datetime={publishDate.toISOString()}>
          {publishDate.toLocaleDateString('en-US', { 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
          })}
        </time>
        <span>â€¢</span>
        <span>{author}</span>
      </div>
      {image && (
        <img 
          src={image} 
          alt={title} 
          class="w-full h-64 object-cover rounded-lg mt-8"
        />
      )}
    </header>

    <div class="prose prose-lg prose-invert max-w-none">
      <Content />
    </div>

    <footer class="mt-12 pt-8 border-t border-[color:var(--color-luxe-accent)]">
      <div class="flex flex-wrap gap-2">
        {tags.map((tag: string) => (
          <a 
            href={`/blog?tag=${tag}`}
            class="px-3 py-1 bg-[color:var(--color-luxe-accent)] text-white rounded-full text-sm hover:bg-[color:var(--color-luxe-accent-hover)]"
          >
            {tag}
          </a>
        ))}
      </div>
    </footer>
  </article>
</Layout> 