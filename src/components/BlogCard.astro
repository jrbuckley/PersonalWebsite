---
import type { CollectionEntry } from 'astro:content';

interface Props {
  post: CollectionEntry<'blog'>;
  buildUrl: (params: Record<string, string>) => string;
  searchQuery: string;
}

const { post, buildUrl, searchQuery } = Astro.props;
---

<article class="bg-[color:var(--color-luxe-card)] rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-shadow">
  {post.data.image && (
    <img 
      src={post.data.image} 
      alt={post.data.title} 
      class="w-full h-48 object-cover"
    />
  )}
  <div class="p-6">
    <h2 class="text-2xl font-semibold text-[color:var(--color-luxe-text)] mb-2">
      <a href={`/blog/${post.slug}`} class="hover:text-[color:var(--color-luxe-accent)]">
        {post.data.title}
      </a>
    </h2>
    <p class="text-[color:var(--color-luxe-subtext)] mb-4">
      {post.data.description}
    </p>
    <div class="flex items-center justify-between text-sm text-[color:var(--color-luxe-subtext)]">
      <div class="flex items-center gap-4">
        <time datetime={post.data.publishDate.toISOString()}>
          {post.data.publishDate.toLocaleDateString('en-US', { 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
          })}
        </time>
        <span>â€¢</span>
        <span>{post.data.author}</span>
      </div>
      <div class="flex flex-wrap gap-2">
        {post.data.tags.map(tag => (
          <a 
            href={buildUrl({ tag, q: searchQuery })}
            class="px-2 py-1 bg-[color:var(--color-luxe-accent)] text-white rounded-full text-xs hover:bg-[color:var(--color-luxe-accent-hover)]"
          >
            {tag}
          </a>
        ))}
      </div>
    </div>
  </div>
</article> 